# Generated by Django 3.2.22 on 2025-01-21 14:35

from decimal import Decimal
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('medias', '0013_contracttemplate_image'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('companies', '0035_companymedia_blog_url'),
        ('human_ressources', '0068_beneficiaryendowmententry'),
        ('data_management', '0046_professionalstatus_typeendowment'),
        ('activities', '0019_beneficiaryabsence_is_considered'),
    ]

    operations = [
        migrations.CreateModel(
            name='BeneficiaryExpense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(editable=False, max_length=255, null=True)),
                ('label', models.CharField(max_length=255, null=True)),
                ('amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('expense_date_time', models.DateTimeField(blank=True, null=True)),
                ('payment_method', models.CharField(choices=[('CASH', 'Espèces'), ('CREDIT_CARD', 'Carte de crédit'), ('BANK_TRANSFER', 'Virement bancaire'), ('DIRECT_DEBIT', 'Prélèvement'), ('PURCHASE_ORDER', 'Bon de commande'), ('CHECK', 'Chèque'), ('PAYPAL', 'PayPal'), ('BILL_OF_EXCHANGE', 'Lettre de change relevé'), ('LIBEO_TRANSFER', 'Virement par Libeo'), ('MOBILE_PAYMENT', 'Paiement mobile'), ('CRYPTOCURRENCY', 'Cryptomonnaie'), ('DEBIT_CARD', 'Carte de débit'), ('APPLE_PAY', 'Apple Pay'), ('GOOGLE_PAY', 'Google Pay')], default='CASH', max_length=50)),
                ('status', models.CharField(choices=[('PENDING', 'En Attente'), ('APPROVED', 'Approuvé'), ('REJECTED', 'Rejeté'), ('PAID', 'Payé'), ('UNPAID', 'Non payé')], default='PENDING', max_length=20)),
                ('description', models.TextField(blank=True, default='', null=True)),
                ('comment', models.TextField(blank=True, default='', null=True)),
                ('observation', models.TextField(blank=True, default='', null=True)),
                ('is_active', models.BooleanField(default=True, null=True)),
                ('is_deleted', models.BooleanField(default=False, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('beneficiary', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='beneficiary_expenses', to='human_ressources.beneficiary')),
                ('company', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='company_beneficiary_expenses', to='companies.company')),
                ('creator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('employee', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employee_beneficiary_expenses', to='human_ressources.employee')),
                ('endowment_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='beneficiary_expenses', to='data_management.typeendowment')),
                ('files', models.ManyToManyField(related_name='file_beneficiary_expenses', to='medias.File')),
                ('folder', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='medias.folder')),
            ],
        ),
    ]
